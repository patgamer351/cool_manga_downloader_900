#!/bin/bash

manga_link='https://mangakakalot.com/manga'
manga_search_link='https://mangakakalot.com/search/story/'
image_dir="$HOME/.cache/cool_manga_downloader_900/"
offset=1000
selected_chapter_end=0
silent=false
use_chapter_url=false
no_zathura=false

# Colors
RED='\033[0;31m'
ORANGE='\033[0;33m'
RESET='\033[0;37m'


help_text()
{
    echo "Made by Patrick C, feel free to do whatever you want with this code :D"
    echo " -h | prints this help text then exits the program"
    echo " -s | silent mode, this prints not as much text"
    echo " -M | mass downloads an entire manga"
    echo " -u | downloads a chapter except you enter the url instead of searching for it (WIP DOESNT WORK YET)"
    echo " -U | downloads a manga except you enter the url instead of searching for it"
    echo " -n | only downloads the manga/chapters to the image directory and doesnt open it with zathura"
	echo "     (you dont need to have zathura if you're using this option)"
    echo " -d \$arguement | changes the directory that it saves images to from \"\$HOME/.cache/cool_manga_downloader_900/\" to \$arguement"
    echo "If you have an option that you want please tell me !!"
}


while getopts "hsMUud:" opt; do
    case $opt in
    h)
        help_text
        exit 0
        ;;
    s)
        silent=true
        ;;
    M)
        download_manga_selected=true
        ;;
    U)
        use_manga_url=true
        ;;
    u)
        echo "use chapter is a wip"
        use_chapter_url=true
        ;;
    n)
        no_zathura=true
        ;;
    d)
    	image_dir=$OPTARG
    	;;
    \?)
        echo "Invalid option: -$OPTARG" >&2
        echo
        help_text
        exit 1
        ;;
    esac
done

Open_In_Zathura()
{
    echo "Opening in Zathua"
    if [ $no_zathura == false ];then
        zathura "$1"
    fi
}


select_manga()
{
    if [[ ! $use_manga_url == true ]];then
        echo -n "Search manga: " 
        read manga_name
        echo

        selected_manga_name="${manga_name// /_}"

        mapfile -t mangas    < <(curl -s $manga_search_link$selected_manga_name | pup -p "div.story_item_right h3 a text{}")
        mapfile -t manga_ids < <(curl -s $manga_search_link$selected_manga_name | pup -p "div.story_item_right h3 a attr{href}")

        if [ "${mangas[0]}" == "" ];then
            echo "Sorry, wasn't able to find a manga named $manga_name"
            echo
            exit 1
        fi

        i=1
        for each in "${mangas[@]}"
        do
            if (( $i % 2 == 0 ));then
                echo -e "$RED[$i] $each"
            else
                echo -e "$ORANGE[$i] $each"
            fi
            ((i++))
        done

        if (( $i % 2 == 0));then
            echo -e "$RED[a] search for another anime"
        else
        	echo -e "$ORANGE[a] search for another anime"
        fi

        if (( $i % 2 == 0));then
            echo -e "$ORANGE[q] quit"
        else
        	echo -e "$RED[q] quit"
        fi

        echo -e ${RESET}
        echo -n "Enter Number: "
        read manga_number

        if [[ "$manga_number" == "a" ]] || [[ "$manga_number" == "A" ]];then
    	    select_manga
            return [n]
        fi

        if [[ "$manga_number" == "q" ]] || [[ "$manga_number" == "Q" ]];then
    	    exit -1
        fi

        if ! [[ "$manga_number" =~ ^[0-9]+$ ]];then
            echo "Sorry, please enter an integer"
            exit 1
        fi


        manga_number=$((manga_number-1))

        manga_id=${manga_ids[$manga_number]}

        selected_manga_name=${mangas[$manga_number]}

    else
        echo -n -e "Enter url: "
        read manga_id
        selected_manga_name=$(curl -s https://readmanganato.com/$manga_id | pup "h1 text{}")
    fi

    echo; selected_manga_name="${selected_manga_name// /_}"
    if [[ "$manga_id" == *"https://readmanganato"* ]];then
        mapfile -t chapter_ids  < <(curl -s $manga_id | pup -p 'a.chapter-name attr{href}')
        mapfile -t chapter_list < <(curl -s $manga_id | pup -p 'a.chapter-name text{}')
    elif [[ "$manga_id" == *"https://mangakakalot"* ]];then
        mapfile -t chapter_ids  < <(curl -s $manga_id | pup -p 'div.chapter-list div.row span a attr{href}')
        mapfile -t chapter_list < <(curl -s $manga_id | pup -p 'div.chapter-list div.row span a text{}')
    else
        echo "Please go to https://mangakakalot.com and search for your manga then let me know the link and that you got this error, thanks!!"
    fi

    if [ ! -d "$image_dir$selected_manga_name" ];then
        mkdir $image_dir$selected_manga_name
    fi
}



download_manga()
{

    if [ -f "$image_dir$selected_manga_name.cbz" ];then

        echo "Already previously downloaded"
        Open_In_Zathura "$image_dir$selected_manga_name.cbz"

    else

        if [[ $silent == true ]];then
            echo "Downloading $selected_manga_name"
        fi

        ((chapter_count=$offset+1))
        for ((i=${#chapter_ids[@]}-1;i>=0;i--));do
            if [[ $silent != true ]];then
                echo "Downloading ${chapter_list[$i]}"
                echo "It's link ${chapter_ids[$i]}"
            fi
            mapfile -t chapter_images < <(curl -s ${chapter_ids[$i]} | pup -p "div.container-chapter-reader img attr{src}")
            ((page_count=$offset+1))
            for image_location in ${chapter_images[@]}
            do
                if [ ! -f "$image_dir$selected_manga_name/$selected_manga_name-chapter$chapter_count-$page_count.jpg" ];then
                    if [[ $silent != true ]];then
                        echo "Downloading $selected_manga_name-chapter$chapter_count-$page_count.jpg"
                    fi
                    # echo "not downloading"
                    curl -s $image_location -o "$image_dir$selected_manga_name/$selected_manga_name-chapter$chapter_count-$page_count.jpg" -H 'User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:95.0) Gecko/20100101 Firefox/95.0' -H 'Accept: image/avif,image/webp,*/*' -H 'Accept-Language: en-US,en;q=0.5' -H 'Accept-Encoding: gzip, deflate, br' -H 'Connection: keep-alive' -H 'Referer: https://readmanganato.com/' -H 'Sec-Fetch-Dest: image' -H 'Sec-Fetch-Mode: no-cors' -H 'Sec-Fetch-Site: cross-site' -H 'If-Modified-Since: Fri, 18 May 2018 10:55:14 GMT' -H 'If-None-Match: "5afeb112-19718"' -H 'Cache-Control: max-age=0'
                else
                    if [[ $silent != true ]];then
                        echo "Already downloaded $image_dir$selected_manga_name/$selected_manga_name-chapter$chapter_count-$page_count.jpg"
                    fi
                fi
                ((page_count++))

            done
            ((chapter_count++))
        done

        cp $image_dir$selected_manga_name/$selected_chapter_name*.jpg $image_dir

        if [[ $silent != true ]];then
            echo "creating the manga with downloaded images"
        fi

        zip -q $image_dir$selected_manga_name.cbz $image_dir*.jpg

        rm $image_dir*.jpg

        Open_In_Zathura "$image_dir$selected_manga_name.cbz"
    fi

}



select_chapter()
{
    if [ -f "$image_dir$selected_manga_name.cbz" ];then
        echo "Already previously downloaded"
        Open_In_Zathura "$image_dir$selected_manga_name.cbz"
    fi

    i=${#chapter_list[@]}
    for each in "${chapter_list[@]}"
    do
        if (( $i % 2 == 0 )) 
        then
            echo -e "$RED[$i] $each"
        else
            echo -e "$ORANGE[$i] $each"
        fi
        ((i--))
    done

    if (( $i % 2 == 0));then
    	echo -e "$RED[a] search for another manga"
    else
    	echo -e "$ORANGE[a] search for another manga"
    fi

    if (( $i % 2 == 0));then
    	echo -e "$ORANGE[q] quit"
    else
    	echo -e "$RED[q] quit"
    fi


    echo -e ${RESET}
    echo -e "Enter \$starting_chapter \$last_chapter to download a range between the two, or just enter one number to download the one chapter"
    echo
    echo -n "Select chapter: "
    read selected_chapter_start selected_chapter_end
    echo
    # ((selected_chapter_start--))

    if [[ "$selected_chapter_start" == "a" ]];then
    	select_manga
        return 1
    elif [[ "$selected_chapter_start" == "q" ]];then
    	exit -1
    fi

    if [[ -z $selected_chapter_end ]];then
    	selected_chapter_end=0
    fi

    if [[ $selected_chapter_end -ne 0 ]];then
        if [[ $selected_chapter_start -ge $selected_chapter_end ]] || [[ $selected_chapter_start -eq $selected_chapter_end ]];then
            echo "please make sure that when selecting a range of chapters that the first number isn't the same or larger than the last one"
            exit -1
        fi
    fi

    echo "Debug: $selected_chapter_start ${#chapter_list[@]}"
    if [[ $selected_chapter_start > ${#chapter_list[@]} ]];then
        echo "Error, you entered a number that was larger then the amount of chapters that there are"
        exit -1
    fi
    selected_chapter_name=${chapter_list[${#chapter_list[@]}-$selected_chapter_start]}
    selected_chapter_name="${selected_chapter_name// /_}"
}


download_chapter()
{
    if [ ! -f "$image_dir$selected_chapter_name.cbz" ];then
        if [ $silent == true ];then
            echo "Downloading $selected_manga_name"
        fi

        mapfile -t chapter_ids  < <(curl -s $manga_id | pup -p 'div.chapter-list div.row span a attr{href}')

        if [ $selected_chapter_end -ne 0 ];then # downloading multiple chapters
            ((chapter_count=$offset+$selected_chapter_start))

            for ((i=$selected_chapter_start; i<=$selected_chapter_end; i++)); do

                if [ ! $silent == true ];then
                    echo "Downloading chapter: ${chapter_list[${#chapter_ids[@]}-$i]}"
                    echo "Chapter link: ${chapter_ids[${#chapter_ids[@]}-$i]}"
                fi
                mapfile -t chapter_images < <(curl -s ${chapter_ids[${#chapter_ids[@]}-$i]} | pup -p "div.container-chapter-reader img attr{src}")
                ((page_count=$offset+1))
                for image_location in ${chapter_images[@]}; do
                    if [ ! -f "$image_dir$selected_manga_name/$selected_manga_name-chapter$chapter_count-$page_count.jpg" ];then
                        if [ ! $silent == true ];then
                            echo "Downloading $selected_manga_name-chapter$chapter_count-$page_count.jpg"
                        fi

                        curl -s $image_location -o "$image_dir$selected_manga_name/$selected_manga_name-chapter$chapter_count-$page_count.jpg" -H 'User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:95.0) Gecko/20100101 Firefox/95.0' -H 'Accept: image/avif,image/webp,*/*' -H 'Accept-Language: en-US,en;q=0.5' -H 'Accept-Encoding: gzip, deflate, br' -H 'Connection: keep-alive' -H 'Referer: https://readmanganato.com/' -H 'Sec-Fetch-Dest: image' -H 'Sec-Fetch-Mode: no-cors' -H 'Sec-Fetch-Site: cross-site' -H 'If-Modified-Since: Fri, 18 May 2018 10:55:14 GMT' -H 'If-None-Match: "5afeb112-19718"' -H 'Cache-Control: max-age=0'

                    else
                        if [ ! $silent == true ];then
                            echo "Already downloaded $image_dir$selected_manga_name/$selected_manga_name-chapter$chapter_count-$page_count.jpg"
                        fi
                    fi
                    ((page_count++))
                done
                ((chapter_count++))
            done

            for ((i=$selected_chapter_start+$offset; i<=$selected_chapter_end+$offset; i++)); do

                cp $image_dir$selected_manga_name/$selected_manga_name-chapter$i*.jpg $image_dir

                if [[ $silent != true ]];then
                    echo "creating the manga with downloaded images"
                fi

                zip -q $image_dir$selected_manga_name-chapter$i.cbz $image_dir*.jpg

                rm $image_dir*.jpg

            done

            ((i=$offset+$selected_chapter_start));Open_In_Zathura "$image_dir$selected_manga_name-$i.cbz"

            else # downloading multiple chapters

                mapfile -t chapter_images < <(curl -s ${chapter_ids[${#chapter_ids[@]}-$selected_chapter_start]} | pup -p "div.container-chapter-reader img attr{src}")
                ((chapter_count=$offset+$selected_chapter_start))
                if [ ! $silent == true ];then
                    echo "Chapter link: ${chapter_ids[${#chapter_ids[@]}-$selected_chapter_start]}"
                fi
                ((page_count=$offset+1))
                for image_location in ${chapter_images[@]}; do
                    if [ ! -f "$image_dir$selected_manga_name/$selected_manga_name-chapter$chapter_count-$page_count.jpg" ];then
                        if [ ! $silent == true ];then
                            echo "Downloading $selected_manga_name-chapter$chapter_count-$page_count.jpg"
                        fi

                        curl -s $image_location -o "$image_dir$selected_manga_name/$selected_manga_name-chapter$chapter_count-$page_count.jpg" -H 'User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:95.0) Gecko/20100101 Firefox/95.0' -H 'Accept: image/avif,image/webp,*/*' -H 'Accept-Language: en-US,en;q=0.5' -H 'Accept-Encoding: gzip, deflate, br' -H 'Connection: keep-alive' -H 'Referer: https://readmanganato.com/' -H 'Sec-Fetch-Dest: image' -H 'Sec-Fetch-Mode: no-cors' -H 'Sec-Fetch-Site: cross-site' -H 'If-Modified-Since: Fri, 18 May 2018 10:55:14 GMT' -H 'If-None-Match: "5afeb112-19718"' -H 'Cache-Control: max-age=0'

                    else
                        if [ ! $silent == true ];then
                            echo "Already downloaded $image_dir$selected_manga_name/$selected_manga_name-chapter$chapter_count-$page_count.jpg"
                        fi
                    fi
                    ((page_count++))
                done

                ((i=$selected_chapter_start+$offset))
                cp $image_dir$selected_manga_name/$selected_manga_name-chapter$i*.jpg $image_dir
                if [[ $silent != true ]];then
                    echo "creating the manga with downloaded images"
                fi

                zip -q $image_dir$selected_manga_name-chapter$i.cbz $image_dir*.jpg

                rm $image_dir*.jpg

                ((i=$offset+$selected_chapter_start));Open_In_Zathura "$image_dir$selected_manga_name-chapter$i.cbz"

            fi

    else # if the whole manga has alorady been downloaded
        echo "Already downloaded $selected_manga_name"

        ((i=$offset+$selected_chapter_start));Open_In_Zathura "$image_dir$selected_manga_name-chapter$i.cbz"

    fi
    chapter_select
}



chapter_select()
{
    echo
    echo "(N)ext chapter"
    echo "(P)revious chapter"
    echo "(Q)uit"
    read option
    if [[ "$option" == "N" ]] || [[ "$option" == "n" ]]
    then

        $selected_chapter_end=0
        (($selected_chapter_start++))
        download_chapter

    elif [[ "$option" == "P" ]] || [[ "$option" == "p" ]]
    then
    
        $selected_chapter_end=0
        (($selected_chapter_start--))
        download_chapter
    
    elif [[ "$option" == "Q" ]] || [[ "$option" == "q" ]]
    then
        exit 1
    else
        chapter_select
    fi
}



main()
{

    if [ ! -d $image_dir ];then
        mkdir $image_dir
    fi

    select_manga

    if [[ $download_manga_selected == true ]];then
        download_manga
        exit 1
    fi

    if [[ ! $use_chapter_url == true ]];then
        select_chapter
    fi

    download_chapter

}



main
